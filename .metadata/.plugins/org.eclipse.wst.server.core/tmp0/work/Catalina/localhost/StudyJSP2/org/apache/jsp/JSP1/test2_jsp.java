/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.63
 * Generated at: 2021-03-24 02:32:04 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.JSP1;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class test2_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("  <h1>WebContent/JSP1/test2.html</h1>\r\n");
      out.write("  \r\n");
      out.write("  ");

    // 스크립틀릿 작성 -java코드
    // 문자열 배열- 4칸
    // "java","jsp","web","DB"
 
 
      String[] strArr = {"java","jsp","web","DB"};
    
    String[] strArr3 = new String[]{"java","jsp","web","DB"};
    
    // strArr 배열의 모든 요소의 값을 콘솔창(이클립스)에 출력
    
    for(int i =0;i<strArr.length;i++){
    	System.out.println("strArr["+i+"] = "+strArr[i]);
    }
    
    // 확장for / for-each
    for(String s :strArr){
    	System.out.println(s);
    } 
    
    // 화면에 출력 -> out.print() / out.println()사용
    // html 코드로 작성(줄바꾸기 할때 "<br>" 태그)
    // out.print("html 코드 작성")
    for(int i =0;i<strArr.length;i++){
    	out.println("strArr["+i+"] = "+strArr[i]+"<br>");
    }
  
    // 표현식을 사용해서 화면출력
    for(int i =0;i<strArr.length;i++){
    	
      out.write("\r\n");
      out.write("    \t<!-- Html -->\r\n");
      out.write("    \t<!-- jsp 표현식은 html 코드에 작성 -->\r\n");
      out.write("    \t<hr>\r\n");
      out.write("    \tstrArr[");
      out.print(i );
      out.write("] = ");
      out.print(strArr[i] );
      out.write("\r\n");
      out.write("    \t\r\n");
      out.write("    \t<!-- Html -->\r\n");
      out.write("\t\t");
    	
    	
    }
  
      out.write("\r\n");
      out.write("  \r\n");
      out.write("  <hr>\r\n");
      out.write("  \r\n");
      out.write("  <h3> 테이블 생성 </h3>\r\n");
      out.write("  <!-- 번호 1~4, 과목이름, 과목내용(과목이름+번호) \r\n");
      out.write("  \tjava코드 : strArr 배열의 요소를 html 테이블에 출력\r\n");
      out.write("  -->\r\n");
      out.write("  \r\n");
      out.write("  \r\n");
      out.write("  <table border=\"1\">\r\n");
      out.write("  <tr>\r\n");
      out.write("  \t<th>번호</th>\r\n");
      out.write("  \t<th>과목이름</th>\r\n");
      out.write("  \t<th>과목내용(과목이름+번호)</th>\r\n");
      out.write("  </tr>\r\n");
      out.write("  \r\n");
      out.write("  <tr>\r\n");
      out.write("  \t<td>");
      out.print(1 );
      out.write("</td>\r\n");
      out.write("  \t<td>");
      out.print(strArr[0] );
      out.write("</td>\r\n");
      out.write("  \t<td>");
      out.print(strArr[0] );
      out.print(1 );
      out.write("</td>\r\n");
      out.write("  </tr>\r\n");
      out.write("  \r\n");
      out.write("  <tr>\r\n");
      out.write("  \t<td>");
      out.print(2 );
      out.write("</td>\r\n");
      out.write("  \t<td>");
      out.print(strArr[1] );
      out.write("</td>\r\n");
      out.write("  \t<td>");
      out.print(strArr[1] );
      out.print(2 );
      out.write("</td>\r\n");
      out.write("  </tr>\r\n");
      out.write("  \r\n");
      out.write("  <tr>\r\n");
      out.write("  \t<td>");
      out.print(3 );
      out.write("</td>\r\n");
      out.write("  \t<td>");
      out.print(strArr[2] );
      out.write("</td>\r\n");
      out.write("  \t<td>");
      out.print(strArr[2] );
      out.print(3 );
      out.write("</td>\r\n");
      out.write("  </tr>\r\n");
      out.write("  \r\n");
      out.write("  <tr>\r\n");
      out.write("  \t<td>");
      out.print(4 );
      out.write("</td>\r\n");
      out.write("  \t<td>");
      out.print(strArr[3] );
      out.write("</td>\r\n");
      out.write("  \t<td>");
      out.print(strArr[3] );
      out.print(4 );
      out.write("</td>\r\n");
      out.write("  </tr>\r\n");
      out.write("  \r\n");
      out.write("  </table>\r\n");
      out.write("  \r\n");
      out.write("  \r\n");
      out.write("  \r\n");
      out.write("  \r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
